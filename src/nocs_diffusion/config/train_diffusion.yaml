defaults:
  - base
  - _self_

logger:
  name: train_diffusion

# Training
num_epochs: 100000        # Epochs to train for
steps_before_save: 1000  # Batches before saving a checkpoint
steps_before_eval: 100   # Batches before evaluating
num_eval_batches: 5      # Batches to evaluate on

# Models
depth_latent_size: 1028

model:
  _target_: nocs_diffusion.models.load_model
  path: 
  model: 
    _target_: nocs_diffusion.models.PointContextualized2dDiffusionModel
    diffusion_model:
      _target_:             diffusers.UNet2DConditionModel
      sample_size:          cfg['image_size']
      in_channels:          3
      out_channels:         3
      layers_per_block:     1
      block_out_channels:   [128, 128, 128] # the number of output channels for each UNet block  
      down_block_types:     ["CrossAttnDownBlock2D", "CrossAttnDownBlock2D", "CrossAttnDownBlock2D"] # regular ResNet downsampling block
      up_block_types:       ["UpBlock2D", "UpBlock2D", "UpBlock2D"] # regular ResNet upsampling block
      cross_attention_dim:  ${depth_latent_size}
    
    context_model:
      _target_:  nocs_diffusion.models.load_model
      # When path is set, training starts from pre-trained context encoder.
      path: /home/baldeeb/Code/nocs-diffusion/checkpoints/nocs-diffusion/depth_vae/2024-04-11_10-47-08/0000_099999.pth
      model:
        _target_:   nocs_diffusion.models.CloudToMaskVae
        model:
          _target_: nocs_diffusion.models.VAEPointNetEncoderConvDecoder
          in_dim:     3  # Point Cloud
          out_dim:    1  # Predict Mask
          latent_dim: ${depth_latent_size}
          im_size:    ${image_size}

    scheduler: 
      _target_: diffusers.DDPMScheduler
      num_train_timesteps: 1000

# Optimizer
lr: 1e-4
lr_warmup_steps: 50

